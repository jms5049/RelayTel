<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8">
	<title>Landing Zero Free Bootstrap Theme with Video</title>
	<meta name="description" content="This is a free Bootstrap landing page theme created for BootstrapZero. Feature video background and one page design." />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta name="generator" content="Codeply">
	<!--<link rel="stylesheet" href="./css/bootstrap.min.css" />-->
	<!--<link rel="stylesheet" href="./css/animate.min.css" />-->
	<!--<link rel="stylesheet" href="./css/ionicons.min.css" />-->
	<!--<link rel="stylesheet" href="./css/styles.css" />-->
  <meta charset="utf-8">
  <title>네이버 로그인</title>
  <script src="https://code.highcharts.com/maps/highmaps.js"></script>
  <script src="https://code.highcharts.com/maps/modules/drilldown.js"></script>
  <script type="text/javascript" src="https://static.nid.naver.com/js/naverLogin_implicit-1.0.3.js" charset="utf-8"></script>
  <!--<script type="text/javascript" src="http://code.jquery.com/jquery-1.11.3.min.js"></script>-->
    <!-- 합쳐지고 최소화된 최신 CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">
    <!-- 부가적인 테마 -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">
    <!-- 합쳐지고 최소화된 최신 자바스크립트 -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>

</head>

<script>

var map;
var locations = []; //위도와 경도를 저장할 배열
var locations_name = []; //위치의 이름을 저장하기 위한 배열
var add;
$.ajax({ 
  method: "get",
  url: "https://relaytel-likelion.herokuapp.com/real_HT.csv",
  datatype: 'text', // 받는 data타입은 json형태
  success: function(data) {
    var allTextLines = data.split('\n');
    for (var i = 0; i < allTextLines.length; i += 2) {
      var array = allTextLines[i + 1].split(",");
      var location = new Object();
      var location_name = new Object();

      location["lat"] = parseFloat(array[1]); // parseFloat() : String을 숫자로 바꿔주는 메소드
      location["lng"] = parseFloat(array[2]);
      locations.push(location); // push는 배열에 넣는 메소드

      location_name["name"] = allTextLines[i];
      locations_name.push(location_name);
    }

    // for (var i = 0; i < obj.length; i++) {
    //   var location = new Object();
    //   var location_name = new Object();
    //   location['lat'] = parseFloat(obj[i].latitude); // location에 위도 저장
    //   location['lng'] = parseFloat(obj[i].longitude); // 경도 저장
    //   locations.push(location); // location들의 정보를 가지는 배열 locations에 저장

    //   location_name['name'] = obj[i].location; //위치 이름을 저장
    //   locations_name.push(location_name); // 위치 이름을 저장한 location_name을 locations_name 배열에 저장
    // }
  },
  error: function(data) {
    console.log("error");
  }
}); // 데이터를 가지고 오는!!!

function initMap() { // 구글맵 불러왔을 때 실행되는 메소드 
  var korea = {
    lat: 35.8406632,
    lng: 124.8533161
  };
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 4,
    center: korea
  });
  var marker = new google.maps.Marker({
    position: korea,
    map: map
  });
}



function codeAddress(name1, name2) {
  var address = name1 + " " + name2;
  var geocoder = new google.maps.Geocoder();
  geocoder.geocode({
    'address': address
  }, function(results, status) {
    add = results[0].formatted_address;
    if (status == 'OK') {
      var mapOptions = {
        zoom: 14,
        center: results[0].geometry.location
      }
      map = new google.maps.Map(document.getElementById('map'), mapOptions);
      // map.setCenter(results[0].geometry.location);
 
      var markers = locations.map(function(location, i) { // locations 배열에 대해서 각각 location을 마커로 만듬
        return new google.maps.Marker({
          map: map,
          position: location,
          icon: "<%= asset_path('ht.png') %>"
        });
      });
      var infowindow = new google.maps.InfoWindow(); // 클릭했을 때 하얀창 뜨는!!!
      
      for (var i = 0; i < markers.length; i++) {
        google.maps.event.addListener(markers[i], 'mouseover', (function(markers, i) { // 각각 marker들에 대해서 info창을 띄움
          return function() {
            infowindow.setContent("<a id='hotelname' onclick='test();'>"+ locations_name[i].name + "</a>");
            infowindow.open(map, markers[i]);
          }
        })(markers, i));

      }

      // Add a marker clusterer to manage the markers.
      var markerCluster = new MarkerClusterer(map, markers, // 마커 클러스터를 이용해서 맵에 너무 많은 마커가 있을 시 클러스터로 묶음
        {
          imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'
        });


      // var marker = new google.maps.Marker({
      //     map: map,
      //     position: results[0].geometry.location
      // });
    }
    else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}

function test(){
    
  var scrt_var = document.getElementById("hotelname").innerHTML;
  var location_address = add.toString().split(" ");
    
// console.log(scrt_var);
  scrt_var = scrt_var.split(",",1);
  sessionStorage.setItem('hotelname',scrt_var);
  
  location_address = location_address[1] + " " + location_address[2];
  sessionStorage.setItem('location_address',location_address);
//   console.log(sessionStorage);
  // var strLink = "applicationform.html&Key=" + scrt_var;
  document.getElementById("hotelname").setAttribute("href","application_form.html");
}
    /*
 *  - Highmaps
 * 	Example : http://www.highcharts.com/maps/demo/map-drilldown
 *  Document : http://api.highcharts.com/highmaps
 * */
function highMaps() {

    var me = this;

    me.chart = null;
    me.selected = '0';
    me.event = {
        select: function() {

        },
        unselect: function() {

        },
        drillup: function() {

        }
    };

    me.init();
};
highMaps.prototype.init = function() {
    var me = this;
    var geojson = <%= raw @data %>;
    
    // 전국단위 지도 로드
    
    $.getJSON('https://relaytel-likelion.herokuapp.com/json/0.json', function(geojson) {
        // https://relayhotel-bgd0706.c9users.io/json/0/json
        var data = Highcharts.geojson(geojson, 'map');
        $.each(data, function() {
            this.drilldown = this.properties['code'];
        });
        $('#map').highcharts('Map', {
            credits: {
                enabled: false
            },
            chart: {
                backgroundColor:'rgba(255, 255, 255, 0.07)',
                events: {
                    // drilldown : 클릭시 하위레벨로 진입
                    drilldown: function(e) {
                        if (!e.seriesOptions) {
                            // 상위레벨에서 선택한 부분의 코드값에 따라 하위레벨이 결정
                            var chart = this,
                                mapKey = e.point.drilldown;
                            $.getJSON('https://relaytel-likelion.herokuapp.com/json/' + mapKey + '.json', function(geojson2) {
                                // https://relayhotel-bgd0706.c9users.io/json/
                                data = Highcharts.geojson(geojson2, 'map');
                                chart.addSeriesAsDrilldown(e.point, {
                                    name: e.point.name,
                                    data: data,
                                    showInLegend: false,
                                    allowPointSelect: true,
                                    cursor: 'pointer',
                                    dataLabels: {
                                        enabled: true,
                                        allowOverlap: false,
                                        format: '{point.name}',
                                        // 하위 지도 레이블 스타일 설정
                                        /* defaults : {
                                         * 		"color": "contrast", 
                                         * 		"fontSize": "11px", 
                                         * 		"fontWeight": "bold"; 
                                         * 		"textShadow": "0 0 6px contrast, 0 0 3px contrast" 
                                         * 	}
                                         *  디폴트 상태입니다. ex)textShadow: '0 0 0px #000000'를 설정하지 않는다면 textShadow 효과가 지속됩니다.
                                         *                                      * 
                                         * */
                                        style: {
                                            color: '#000',
                                            textShadow: '0 0 0px #000000',
                                            fontWeight: "none",
                                            textDecoration: 'none'
                                        }
                                    },
                                    states: {
                                        // 하위 지도 hover 스타일 설정
                                        hover: {
                                            color: '#99004C'
                                        },
                                        // 하위 지도 select 스타일 설정
                                        select: {
                                            color: '#998A00'
                                        }
                                    },
                                    tooltip: {
                                        headerFormat: '',
                                        pointFormat: '{point.name}'
                                    },

                                    events: {
                                        click: function(e) {
                                            $('#map').html("");
                                            // console.log(geojson2);
                                            // console.log(e.point);
                                            initMap();
                                            codeAddress(geojson2.name,e.point.name);
                                            var node = document.createElement("button");
                                            var div = document.getElementById("map_div");
                                            var textnode = document.createTextNode("Back To Map");
                                            var button_lo = document.getElementById('button_lo');
                                            
                                            button_lo.setAttribute("style","margin-left:32%;width:18%;height:50px;");
                                            
                                            node.setAttribute("onclick","back_to_map()");
                                            node.setAttribute("id","back_to_button");
                                            node.setAttribute("class","button_new");
                                            node.setAttribute("style", "position:relative;width:18%;height:50px;");
                                            node.appendChild(textnode);
                                            div.appendChild(node);
                                            
                                            
                                            // var button = document.getElementById("back_to_button");
                                            // button.setAttribute("style", "margin-left:100px");
                                            // node.appendChild(textnode);
                                            // document.body.appendChild(node);
                                            
                                        }
                                    }

                                });
                            });
                        }
                    },
                    drillup: function(e) {
                        me.selected = '0';
                        me.event.drillup();
                    }
                }
            },
            series: [{
                data: data,
                showInLegend: false,
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    allowOverlap: false,
                    shadow: false,
                    format: '{point.properties.name}'
                },
                states: {
                    // 상위 지도 hover 스타일 설정
                    hover: {
                        color: '#99004C',
                        borderColor: 'white'
                    }
                },
                tooltip: {
                    headerFormat: '',
                    pointFormat: '{point.properties.name}'
                }
            }],
            // 제목 제거
            title: null,
            // 부제목 제거
            subtitle: null,
            // 줌 설정
            mapNavigation: {
                enableMouseWheelZoom: true,
                enableTouchZoom: true
            },
            // 지역 선택시 하위 지도 띄우는 기능 설정
            drilldown: {
                // 상위 지도 레이블 스타일 설정
                activeDataLabelStyle: {
                    color: '#000',
                    shadow: false,
                    textShadow: '0 0 0px #000000',
                    fontWeight: "none",
                    textDecoration: 'none'
                },
                // 상위 지도 버튼 스타일 설정
                drillUpButton: {
                    relativeTo: 'spacingBox'
                }
            },
            plotOptions: {
                series: {
                    point: {
                        events: {
                            select: function() {
                                // this.properties에 지정한 코드나 이름 값이 저장
                                me.selected = this.properties.code;
                                try {
                                    me.event.select();
                                }
                                catch (err) {}
                            },
                            unselect: function() {
                                // 기본적으로는 select 이벤트 발생 후 unselect가 발생
                                // 아래의 코드를 사용하면 unselect 적용 후 select 이벤트가 발생
                                var p = this.series.chart.getSelectedPoints();
                                if (p.length > 0 && p[0].x == this.x) {
                                    try {
                                        me.event.unselect();
                                    }
                                    catch (err) {}
                                }
                                me.selected = this.properties.code.substring(0, 2);
                            }
                        }
                    }
                }
            }
        });
        me.chart = $("#map").highcharts();
    });
};
highMaps.prototype.drillUp = function() {
    var me = this;
    if (me.chart.drilldownLevels != undefined && me.chart.drilldownLevels.length > 0) {
        me.chart.drillUp();
    }
};
highMaps.prototype.drillDown = function(code) {
    var me = this;
    if (me.selected.substring(0, 2) != code.substring(0, 2)) {
        // drilldown 상태라면 drillup 후에 drilldown 발생
        if (me.chart.drilldownLevels != undefined && me.chart.drilldownLevels.length > 0) {
            me.chart.drillUp();
        }
        // data 중에 파라미터로 넘어온 code 값과 동일한 것이 있다면 그 data를 drilldown
        $.each(me.chart.series[0].data, function(idx, obj) {
            if (obj.properties.code == code) {
                obj.firePointEvent('click');
            }
        });
    }
};
highMaps.prototype.select = function(code) {
    var me = this;
    me.unselect();
    $.each(me.chart.series[0].data, function(idx, obj) {
        if (obj.properties.code == code) {
            obj.select(true);
        }
    });
};
highMaps.prototype.unselect = function(code) {
    var me = this;
    $.each(me.chart.series[0].data, function(idx, obj) {
        obj.select(false);


    });
};

function back_to_map(){
    highMaps.prototype.init();
    var button = document.getElementById("back_to_button");
    button.parentNode.removeChild(button);
    
    var button_lo = document.getElementById('button_lo');
    button_lo.setAttribute("style","margin-left:40%;width:18%;height:50px;");
}
</script>
<style type="text/css">
        /*map style*/
        
        #map {
            height: 500px;
            width: 60%;
            margin-top:5%; 
            border: 2px solid #dadada;
            margin:0 auto;
            z-index:1;
            background-color:#fff;
            border-radius: 20px;
        }
        /*.hc_i {*/
        /*    margin-bottom: 20px;*/
        /*    position: relative;*/
        /*    padding: 0 20px 0 15px;*/
        /*    float:left;*/
        /*    display:inline-block;*/
        /*}*/
        
        .hc_i h3 , h4 {
            display: inline;
            color: black;
            font-size: 17px;
        }
        
        .list_top {
            margin: 0px;
            padding: 0px;
        }
        
        .list_top h2 {
            padding: 35px 30px 20px;
        }
        
        /*.photos {*/
        /*    margin-left: px;*/
        /*    padding-top: 5px;*/
        /*    height: 20%;*/
        /*    display: block;*/
        /*    overflow: hidden;*/
        /*    text-align: left;*/
        /*}*/
        
        .photos ul {
            list-style: none;
            margin: 0;
            padding: 5px;
        }
        
        .photos ul li {
            border: none;
            position: relative;
            /*display: inline;*/
            float:left;
        }
        
        .mainp {
            width:90%;
            
        }
        .photos img {
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            -ms-transform: scale(1);
            -o-transform: scale(1);
            transform: scale(1);
            -webkit-transition: .3s;
            -moz-transition: .3s;
            -ms-transition: .3s;
            -o-transition: .3s;
            transition: .3s;
        }
        
        .photos_0:hover img {
            -webkit-transform: scale(3);
            -moz-transform: scale(3);
            -ms-transform: scale(3);
            -o-transform: scale(3);
            transform: scale(3);
            position: relative;
            z-index : 1;
            margin-left: 30%;
        }
        .photos_1:hover img {
            -webkit-transform: scale(3);
            -moz-transform: scale(3);
            -ms-transform: scale(3);
            -o-transform: scale(3);
            transform: scale(3);
            position: relative;
            z-index : 1;
            margin-left: 30%
        }
        .photos_2:hover img {
            -webkit-transform: scale(3);
            -moz-transform: scale(3);
            -ms-transform: scale(3);
            -o-transform: scale(3);
            transform: scale(3);
            position: relative;
            z-index : 1;
            margin-left: 30%
        }
        @media (max-width: 300px) { 
            .list_top_name { font-size: 70%; } 
        } 
        
        
        @media (min-width: 500px) { 
            .list_top_name { font-size: 80%; }
        } 
        
        @media (min-width: 700px) { 
            .list_top_name { font-size: 120%; } 
        } 
        
        @media (min-width: 1200px) { 
            .list_top_name { font-size: 200%; } 
    
       
        .map_div {
            z-index:1;
            background-color: white;
        }
       
        #img{
            opacity:0.4;
            width:100%;
            height:100%;
            z-index: -1;
            background-size: cover;
            position:absolute;
        }
	.button_new{
		background:#9FBAB2;
		  color:#fff;
		  border:none;
		  position:relative;
		  height:15%;
		  font-size:1.6em;
		  padding:0 2em;
		  cursor:pointer;
		  transition:800ms ease all;
		  outline:none;
	}
	.button_new:hover{
	  background:none;
	  color:#EFFEF9;
	}
	.button_new:before,.button_new:after{
	  content:'';
	  position:absolute;
	  top:0;
	  right:0;
	  height:2px;
	  width:0;
	  background: #EFFEF9;
	  transition:400ms ease all;
	}
	.button_new:after{
	  right:inherit;
	  top:inherit;
	  left:0;
	  bottom:0;
	}
	.button_new:hover:before,.button_new:hover:after{
	  width:100%;
	  transition:800ms ease all;
	}
	
	#button_lo{
	    margin-top:2%;
	    margin-left:40%;
	}
</style>
<script>
    var highMap = new highMaps();
    highMap.init();
</script>
<body>

    <div class="myPage">
		<img id="img" src="travel.jpg"></img>
		<div class="row">
            <!--<div class= "map_div" id="map_div" style="width: 50%;height:50%; margin: 5% auto; border-radius: 40px; ">-->
                
                <br>
                <br>
                <h1 style="text-align:center; font-Weight:bold; color: #525656;">원하는 장소와 호텔을 지정해주세요</h1>
                <br>
                <br>
                <div class=".col-md-6" id="map" >
                        <!--margin-left:57%;-->
                </div>
                <div id="map_div">
                    <a href="/login"><button class="button_new" id="button_lo" style="width:18%;height:50px;" type="submit" >Back Page</button></a>
                	<!--<img class="relay" style="height:3%; width:15%;display:block;margin: 1% auto;" <%#= image_tag("relaytel2_gray.png", :alt => "") %>-->
		    	</div>
		    <!--</div>-->
        </div>
	</div>
	
	
    
    <!--</header>-->
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
    </script>
    <script async defer src='https://maps.googleapis.com/maps/api/js?key=AIzaSyAPwOWIcHSnCelzm-Ja2eGe0SIO6LP0LYs'></script>
    
</body>
